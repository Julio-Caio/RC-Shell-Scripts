import socket

class Server:
    def __init__(self, host, port):
        self.host = host
        self.port = port
        self.socket_tcp = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        self.dest = (self.host, self.port)

    def __str__(self):
        return f"\nServer({self.host} listening in PORT {self.port})"
    
    def createConn(self):
        self.socket_tcp.bind(self.dest)
        self.socket_tcp.listen(5)
        print("Waiting for connections...")
        return self.socket_tcp.accept()
    
    def send(self, conn, data):
        try:
            conn.sendall(data.encode())
        except Exception as e:
            print("Error sending data:", e)
    
    def recv(self, conn, size):
        try:
            return conn.recv(size).decode()
        except Exception as e:
            print("Error receiving data:", e)
    
    def close(self):
        self.socket_tcp.close()

SERVER_IP = '127.0.0.1'
SERVER_PORT = 8080

server = Server(SERVER_IP, SERVER_PORT)

try:
    conn, addr = server.createConn()
    print(f"\nConnection from {addr}")
    while True:
        command = input("\n> Enter command: ")
        server.send(conn, command)
        data = server.recv(conn, 1024)
        print(f"\nReceived: {data}")

except KeyboardInterrupt:
    print("\nClosing the server...")
    server.close()
    exit(0)

except Exception as e:
    print("\nError:", e)
    server.close()
    exit(1)